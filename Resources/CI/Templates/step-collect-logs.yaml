steps:
- task: PowerShell@2
  displayName: Collect diagnostic reports
  condition: and(failed(), eq(variables.VmImage, 'macos-latest'))
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Checking if diagnostic reports created..."
      Start-Sleep -s 10
      
      $path = "$HOME/Library/Logs/DiagnosticReports"
      
      if (Test-Path -Path "$path")
      {
        Write-Host "There are diagnostic reports, copying..."
        Copy-Item -Path "$path" -Destination "$(Pipeline.Workspace)" -Recurse
        Write-Host "##vso[task.setvariable variable=DiagnosticReportsFound]true"
      }
      else
      {
        Write-Host "There are no diagnostic reports found."
        Write-Host "##vso[task.setvariable variable=DiagnosticReportsFound]false"
      }
          
- task: PublishPipelineArtifact@1
  displayName: Publish 'DiagnosticReports' artifact
  condition: eq(variables['DiagnosticReportsFound'], true)
  inputs:
    targetPath: '$(Pipeline.Workspace)/DiagnosticReports'
    artifactName: 'DiagnosticReports'
    artifactType: pipeline

- task: PowerShell@2
  displayName: Collect logs
  condition: always()
  inputs:
    targetType: 'inline'
    script: |
      New-Item -Path "$(Pipeline.Workspace)" -Name "Logs" -ItemType "directory"
      Copy-Item -Path "$(Build.SourcesDirectory)/*.log" -Destination "$(Pipeline.Workspace)/Logs"
      Copy-Item -Path "$(Build.SourcesDirectory)/*.binlog" -Destination "$(Pipeline.Workspace)/Logs"
      
- task: PublishPipelineArtifact@1
  displayName: Publish 'Logs' artifact
  condition: always()
  inputs:
    targetPath: '$(Pipeline.Workspace)/Logs'
    artifactName: 'Logs'
    artifactType: pipeline