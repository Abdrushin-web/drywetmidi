trigger:
  batch: true
  branches:
    include:
    - master
    - develop
  paths:
    include:
    - 'DryWetMidi/*'
    - 'DryWetMidi.Tests/*'
    - 'DryWetMidi.Tests.Common/*'
    - 'Resources/CI/mac-test-netcore-devices.yaml'
    - 'Resources/CI/Templates/stage-build-native-libs.yaml'
    - 'Resources/Native/*'

pr:
  branches:
    include:
    - develop
  paths:
    include:
    - 'DryWetMidi/*'
    - 'DryWetMidi.Tests/*'
    - 'DryWetMidi.Tests.Common/*'
    - 'Resources/CI/mac-test-netcore-devices.yaml'
    - 'Resources/CI/Templates/stage-build-native-libs.yaml'
    - 'Resources/Native/*'

pool:
  vmImage: 'macOS-latest'

variables:
- group: DryWetMIDI-Common-Variables
- name: solution
  value: '**/*.sln'
- name: buildPlatform
  value: 'Any CPU'
- name: buildConfiguration
  value: 'Release'

name: macOS_Test_NetCore_Devices_$(LibraryVersion)$(Rev:.r)

stages:
- template: Templates/stage-build-native-libs.yaml
- stage: RunTests
  displayName: Run tests
  pool:
    vmImage: 'macOS-latest'
  jobs:
  - job: RunTests
    displayName: Run tests
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: Download native libraries
      inputs:
        source: 'current'
        path: '$(Pipeline.Workspace)'
        
    - task: PowerShell@2
      displayName: Copy native libraries near csproj
      inputs:
        targetType: 'inline'
        script: |
          Copy-Item -Path "$(Pipeline.Workspace)\**\*.dll" -Destination "DryWetMidi"
          Copy-Item -Path "$(Pipeline.Workspace)\**\*.dylib" -Destination "DryWetMidi"
    
    - task: UseDotNet@2
      displayName: 'Use .NET Core 3.1'
      inputs:
        packageType: sdk
        version: '3.1.410'
        installationPath: $(Agent.ToolsDirectory)/dotnet
    
    - task: DotNetCoreCLI@2
      displayName: Build DryWetMidi and DryWetMidi.Tests.Common
      inputs:
        command: 'build'
        arguments: '--configuration $(buildConfiguration) --framework netstandard2.0'
        projects: |
          DryWetMidi/Melanchall.DryWetMidi.csproj
          DryWetMidi.Tests.Common/Melanchall.DryWetMidi.Tests.Common.csproj
    
    - task: DotNetCoreCLI@2
      displayName: Build DryWetMidi.Tests
      inputs:
        command: 'build'
        arguments: '--configuration $(buildConfiguration) --framework netcoreapp3.1'
        projects: |
          DryWetMidi.Tests/Melanchall.DryWetMidi.Tests.csproj
    
    - task: DotNetCoreCLI@2
      displayName: Run unit tests
      continueOnError: false
      inputs:
        command: 'test'
        projects: 'DryWetMidi.Tests/Melanchall.DryWetMidi.Tests.csproj'
        arguments: '--blame --no-build --configuration $(buildConfiguration) --filter (FullyQualifiedName~.Devices) --framework netcoreapp3.1 --verbosity normal'
