trigger:
  batch: true
  branches:
    include:
    - master
    - develop
  paths:
    include:
    - 'DryWetMidi/*'
    - 'DryWetMidi.Tests/*'
    - 'DryWetMidi.Tests.Common/*'
    - 'Resources/CI/test-mmedia.yaml'
    - 'Resources/CI/Templates/stage-build-native-libs.yaml'
    - 'Resources/CI/Templates/step-create-ports-windows.yaml'
    - 'Resources/CI/Templates/step-copy-native-libraries-near-csproj.yaml'
    - 'Resources/CI/Templates/step-collect-logs.yaml'
    - 'Resources/CI/Templates/step-build-tests.yaml'
    - 'Resources/CI/Templates/step-setup-framework-variables.yaml'
    - 'Resources/CI/Templates/step-build-tests.yaml'
    - 'Resources/Utilities/CreateLoopbackPort_Windows/*'
    - 'Resources/Scripts/Setup MIDI ports.ps1'
    - 'Resources/Native/*'

pr:
  branches:
    include:
    - develop
  paths:
    include:
    - 'DryWetMidi/*'
    - 'DryWetMidi.Tests/*'
    - 'DryWetMidi.Tests.Common/*'
    - 'Resources/CI/test-mmedia.yaml'
    - 'Resources/CI/Templates/stage-build-native-libs.yaml'
    - 'Resources/CI/Templates/step-create-ports-windows.yaml'
    - 'Resources/CI/Templates/step-copy-native-libraries-near-csproj.yaml'
    - 'Resources/CI/Templates/step-collect-logs.yaml'
    - 'Resources/CI/Templates/step-build-tests.yaml'
    - 'Resources/CI/Templates/step-setup-framework-variables.yaml'
    - 'Resources/CI/Templates/step-build-tests.yaml'
    - 'Resources/Utilities/CreateLoopbackPort_Windows/*'
    - 'Resources/Scripts/Setup MIDI ports.ps1'
    - 'Resources/Native/*'

variables:
- group: DryWetMIDI-Common-Variables

name: TestMultimedia_$(Framework)_$(LibraryVersion)$(Rev:.r)

stages:
- template: Templates/stage-build-native-libs.yaml

- stage: RunTests
  displayName: Run tests
  pool:
    vmImage: '$(VmImage)'
  jobs:
  - job: RunTests
    displayName: Run tests
    steps:
    - template: Templates/step-copy-native-libraries-near-csproj.yaml
    
    - template: Templates/step-setup-framework.yaml
      parameters:
        framework: '$(Framework)'
    
    - template: Templates/step-build-tests.yaml
      parameters:
        tfm: '$(Tfm)'
    
    - task: PowerShell@2
      displayName: Build test data sending utility
      condition: contains(variables.VmImage, 'macos')
      inputs:
        targetType: 'inline'
        script: |
          cd DryWetMidi.Tests
          gcc -c SendTestData.c
          gcc -shared -framework CoreServices -framework CoreMIDI -framework CoreFoundation -o SendTestData.dylib SendTestData.o
          Copy-Item -Path "SendTestData.dylib" -Destination "bin/$(TestBuildConfiguration)/$(Tfm)" -Recurse
          
    - task: PublishPipelineArtifact@1
      displayName: Publish 'SendTestData' artifact
      condition: contains(variables.VmImage, 'macos')
      inputs:
        targetPath: 'DryWetMidi.Tests/SendTestData.dylib'
        artifactName: 'SendTestData'
        artifactType: pipeline
    
    - template: Templates/step-create-ports-windows.yaml
      parameters:
        enabled: contains(variables.VmImage, 'windows')
    
    - template: Templates/step-create-ports-macos.yaml
      parameters:
        enabled: contains(variables.VmImage, 'macos')
    
    - task: DotNetCoreCLI@2
      displayName: Run unit tests
      continueOnError: false
      inputs:
        command: 'test'
        projects: 'DryWetMidi.Tests/Melanchall.DryWetMidi.Tests.csproj'
        arguments: '--blame --no-build --configuration $(TestBuildConfiguration) --filter (FullyQualifiedName~.Multimedia) --framework $(Tfm) --verbosity normal --diag diagnostic.log --logger "console;verbosity=normal"'
        
    - template: Templates/step-collect-logs.yaml
